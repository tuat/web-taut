#!/bin/bash

# Settings
TIMESTAMP=$(date +"%F")

BACKUP_FOLDER="backup/$TIMESTAMP"
POSTGRES_USER="POSTGRES_USER"
POSTGRES_PASS="POSTGRES_PASS"
POSTGRES_DB="POSTGRES_DB"
POSTGRES_PSQL="/usr/bin/psql"
POSTGRES_DUMP="/usr/bin/pg_dump"

DROPBOX_PATH="/Backup/Domain/example.com"

# Setup dropbox uploader
if [[ ! -a $uploader_folder ]]; then
    curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o dropbox_uploader.sh
fi

if [[ ! -a ~/.dropbox_uploader ]]; then
    source $uploader_file
fi

# Create backup directory
mkdir -p $BACKUP_FOLDER

# Dump database to backup folder
PGPASSWORD="$POSTGRES_PASS" $POSTGRES_DUMP --host=localhost --port=5432 --username="$POSTGRES_USER" --format=c --blobs --verbose --file="$BACKUP_FOLDER/$POSTGRES_DB.bin.dump" "$POSTGRES_DB"
PGPASSWORD="$POSTGRES_PASS" $POSTGRES_DUMP --host=localhost --port=5432 --username="$POSTGRES_USER" --format=p --blobs --verbose --file="$BACKUP_FOLDER/$POSTGRES_DB.pgsql.dump" "$POSTGRES_DB"
PGPASSWORD="$POSTGRES_PASS" $POSTGRES_DUMP --host=localhost --port=5432 --username="$POSTGRES_USER" --format=p --blobs --clean --if-exists --inserts --no-owner --disable-dollar-quoting --no-tablespaces --verbose --file="$BACKUP_FOLDER/$POSTGRES_DB.sql.dump" "$POSTGRES_DB"

# Zip backup folder then remove backup folder
tar zcvf $BACKUP_FOLDER.tar.gz $BACKUP_FOLDER
rm -rf $BACKUP_FOLDER

# Put to dropbox
PUT_CMD="bash dropbox_uploader.sh upload $BACKUP_FOLDER.tar.gz $DROPBOX_PATH/$TIMESTAMP.tar.gz"
echo $PUT_CMD && `$PUT_CMD`

# # Remove from dropbox (expire 6 day files)
DELETE_CMD="bash dropbox_uploader.sh delete $DROPBOX_PATH/$(date -v -6d +'%F').tar.gz"
echo $DELETE_CMD && `$DELETE_CMD`

# Remove backup zip file
rm -rf $BACKUP_FOLDER.tar.gz
